Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/EncoderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.Tele.untested;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\r\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\r\nimport com.qualcomm.robotcore.hardware.DcMotor;\r\n\r\n@TeleOp\r\npublic class EncoderTest extends LinearOpMode {\r\n    @Override\r\n    public void runOpMode() throws InterruptedException{\r\n        DcMotor linSlideTest = hardwareMap.dcMotor.get(\"linSlideTest\");\r\n        linSlideTest.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n\r\n        waitForStart();\r\n        telemetry.addData(\"Mode\", \"Ready2Start\");\r\n        telemetry.update();\r\n\r\n        while(opModeIsActive()){\r\n            linSlideTest.setTargetPosition(2100);\r\n            linSlideTest.setMode(DcMotor.RunMode.RUN_TO_POSITION);\r\n            linSlideTest.setPower(0.2);\r\n            telemetry.addData(\"Current Position=\",linSlideTest.getCurrentPosition() + \"running=\"+linSlideTest.isBusy());\r\n            telemetry.update();\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/EncoderTest.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/EncoderTest.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/EncoderTest.java	
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/EncoderTest.java	
@@ -8,7 +8,7 @@
 public class EncoderTest extends LinearOpMode {
     @Override
     public void runOpMode() throws InterruptedException{
-        DcMotor linSlideTest = hardwareMap.dcMotor.get("linSlideTest");
+        DcMotor linSlideTest = hardwareMap.dcMotor.get("rightLinSlide");
         linSlideTest.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
 
         waitForStart();
Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/TwoStageLinSlideFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.Tele.untested;\r\nimport com.qualcomm.robotcore.hardware.DcMotor;\r\nimport com.qualcomm.robotcore.hardware.Gamepad;\r\n\r\npublic class TwoStageLinSlideFile {\r\n    static final int low = 0; // declares encoder variables\r\n    static final int mid = 2100;\r\n    static final int high = 4200;\r\n\r\n\r\n    public enum states {LOW, MEDIUM, HIGH, TOLOW, TOMEDIUM, TOHIGH} //state array for state machine\r\n    public static states state = states.LOW;\r\n    static DcMotor rightLinSlide = null; //DC Motors for lin slide\r\n    //static DcMotor leftLinSlide = null;\r\n    public static void setLSMotor (DcMotor rightLSMotor/*,DcMotor leftLSMotor*/){ //using encoders for motors\r\n        rightLinSlide = rightLSMotor;\r\n        //leftLinSlide = leftLSMotor;\r\n        rightLinSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\r\n        rightLinSlide.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\r\n        rightLinSlide.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        //leftLinSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\r\n        //leftLinSlide.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\r\n        //leftLinSlide.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n    }\r\n    public static void linSlideDouble(Gamepad gamepad1){ // using game pad for input to state machine\r\n        moveStates(gamepad1.right_trigger, gamepad1.left_bumper, gamepad1.right_bumper);\r\n    }\r\n    public static void moveStates (float rightTrigger, boolean leftBumper, boolean rightBumper){ //Left Bumper goes to lowest state, Right Bumper goes to medium state, Right Trigger goes to High state\r\n        switch(state){ //define state machine\r\n            case LOW:\r\n                rightLinSlide.setPower(0); //Linslide power 0\r\n                //leftLinSlide.setPower(0);\r\n                if (rightBumper){ // if right bumper clicked, go to mid state\r\n                    state = states.TOMEDIUM;\r\n                }\r\n                else if (rightTrigger > 0.7){ // if right trigger clicked, go to high state\r\n                    state = states.TOHIGH;\r\n                }\r\n                break;\r\n            case MEDIUM:\r\n                rightLinSlide.setPower(0);\r\n                //leftLinSlide.setPower(0);\r\n                if(leftBumper){\r\n                    state = states.TOLOW;\r\n                }\r\n                else if(rightTrigger > 0.7){\r\n                    state = states.TOHIGH;\r\n                }\r\n                break;\r\n            case HIGH:\r\n                rightLinSlide.setPower(0);\r\n                //leftLinSlide.setPower(0);\r\n                if(rightBumper){\r\n                    state = states.TOMEDIUM;\r\n                }\r\n                else if(leftBumper){\r\n                    state = states.LOW;\r\n                }\r\n                break;\r\n            case TOLOW:\r\n                if(rightLinSlide.getCurrentPosition() > low /*&& leftLinSlide.getCurrentPosition()>low*/){ // if right lin slide and left lin slide encoder is more than 0, go to\r\n                    rightLinSlide.setTargetPosition(low);\r\n                    rightLinSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);\r\n                    rightLinSlide.setPower(-0.9);\r\n\r\n                    //leftLinSlide.setPower(-0.9);\r\n                }\r\n                else{\r\n                    state = states.LOW; // anything else, set state to low and power to 0\r\n                    rightLinSlide.setPower(0);\r\n                    //leftLinSlide.setPower(0);\r\n                }\r\n                break;\r\n            case TOMEDIUM:\r\n                if(rightLinSlide.getCurrentPosition() < mid /*&& leftLinSlide.getCurrentPosition() < mid*/ ){\r\n                    rightLinSlide.setTargetPosition(mid);\r\n                    rightLinSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);\r\n                    rightLinSlide.setPower(0.9);\r\n                    //leftLinSlide.setPower(0.9);\r\n                }\r\n                else if (rightLinSlide.getCurrentPosition() > mid /*&& leftLinSlide.getCurrentPosition() > mid*/){\r\n                    rightLinSlide.setTargetPosition(mid);\r\n                    rightLinSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);\r\n                    rightLinSlide.setPower(-0.9);\r\n                    //leftLinSlide.setPower(-0.9);\r\n                }\r\n                else {\r\n                    state = states.MEDIUM;\r\n                    rightLinSlide.setPower(0);\r\n                   // leftLinSlide.setPower(0);\r\n                }\r\n                break;\r\n            case TOHIGH:\r\n                if(rightLinSlide.getCurrentPosition() < high){\r\n                    rightLinSlide.setTargetPosition(high);\r\n                    rightLinSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);\r\n                    rightLinSlide.setPower(0.9);\r\n                    //leftLinSlide.setPower(0.9);\r\n                }\r\n                else{\r\n                    state = states.HIGH;\r\n                    rightLinSlide.setPower(0);\r\n                    //leftLinSlide.setPower(0);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/TwoStageLinSlideFile.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/TwoStageLinSlideFile.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/TwoStageLinSlideFile.java	
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Tele/untested/TwoStageLinSlideFile.java	
@@ -54,7 +54,7 @@
                     state = states.TOMEDIUM;
                 }
                 else if(leftBumper){
-                    state = states.LOW;
+                    state = states.TOLOW;
                 }
                 break;
             case TOLOW:
